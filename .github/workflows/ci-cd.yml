# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI Poker-restaurant-front

on:
  [push, pull_request]

jobs:
  CI:

    runs-on: ubuntu-latest
    # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - name: Install dependencies
      run: |
        npm install
    - name: Build app
      run: npm run build:prod
    #- name: test
      #run: npm run test:ci
    #- name: e2e
      #run: npm run e2e:ci
    - name: Lint
      run: npm run lint
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHU_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECTKEY }}
    - name: artifact in JFrog
      run: echo 'jfrog'
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v2.x
    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: poker-resto-front-${{ env.GITHUB_REF_SLUG }}-${{ github.run_id }}-${{ github.run_number }}
        path: ./dist/poker-bar-front

  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:
    - name: inject slug/short variables
      uses: rlespinasse/github-slug-action@v2.x
    - name: download artifact
      uses: actions/download-artifact@v2
      with:
        name: poker-resto-front-${{ env.GITHUB_REF_SLUG }}-${{ github.run_id }}-${{ github.run_number }}
        path: './build'
    - name: deploy to Netlify
      uses: nwtgck/actions-netlify@v1.1
      with:
        publish-dir: './build'
        production-branch: master
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
